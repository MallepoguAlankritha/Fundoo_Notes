{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Fundoo Notes App",
        "description": "Fundoo Notes Application",

        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],

    "paths": {
        "/registeruser": {
            "post": {
                "tags": ["Register"],
                "description": "Register new user",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "User that we want to register",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "New user is Registered"
                    },
                    "409": {
                        "description": "User already exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },

        "/login": {
            "post": {
                "tags": ["Login"],
                "description": "Login user",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forgotpassword": {
            "post": {
                "tags": ["forgotPassword"],
                "description": "Send password link",
                "parameters": [
                    {
                        "name": "forgotpassword",
                        "in": "body",
                        "description": "Sent password resent link",
                        "schema": {
                            "$ref": "#/definitions/forgotpassword"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
        }
    },


                "/resetPassword": {
                    "put": {
                        "tags": [
                            "reset password"
                        ],
                        "description": "Already registered ? Then reset password successfully !!",
                        "parameters": [
                            {
                                "name": "Reset Password",
                                "in": "body",
                                "description": "Reset Password with code",
                                "schema": {
                                    "$ref": "#/definitions/resetPassword"
                                }
                            }
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "responses": {
                            "200": {
                                "description": "reset password succesfully !!"
                            },
                            "400": {
                                "description": "Incorrect Password for reset password"
                            },
                            "500": {
                                "description": "Internal server error"
                            }
                        }
                    }
                },
                "/createNote": {
                    "post": {
                        "tags": [
                            "Create Notes"
                        ],
                        "description": "Create a  note !!",
                        "parameters": [
                            {
                                "in": "header",
                                "name": "Authorization",
                                "description": "Token for validation",
                                "schema": {
                                    "type": "string",
                                    "required": true
                                }
                            },
                            {
                                "name": "create note",
                                "in": "body",
                                "description": "Note's body",
                                "schema": {
                                    "$ref": "#/definitions/createNote"
                                }
                            }
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "schema": {
                            "$ref": "#/definitions/createNote"
                        },
                        "responses": {
                            "201": {
                                "description": "Create note succesfully !!"
                            },
                            "400": {
                                "description": "Please enter Valid Token"
                            },
                            "500": {
                                "description": "Internal server error"
                            }
                        }
                    }
                },
                "/getNote": {
                    "get": {
                        "tags": [
                            "Get All Notes"
                        ],
                        "description": "Get all note !!",
                        "parameters": [
                            {
                                "in": "header",
                                "name": "Authorization",
                                "description": "Token for validation",
                                "schema": {
                                    "type": "string",
                                    "required": true
                                }
                            }
                        ],

                        "produces": [
                            "application/json"
                        ],
                        "schema": {
                            "$ref": "#/definitions/getNote"
                        },
                        "responses": {
                            "201": {
                                "description": "Succesfully !! retrieve all notes."
                            },
                            "401": {
                                "description": "Please enter Valid Token/ or add bearer before token..."
                            },
                            "500": {
                                "description": "Internal server error"
                            }
                        }
                    }    
    },
    "/getNote/{id}": {
        "get": {
            "tags": [
                "Get Notes By Id"
            ],
            "description": "Get a note by ID for specific person id",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for validation",
                    "schema": {
                        "type": "string",
                        "required": true
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Note id for retrieve note",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "schema": {
                "$ref": "#/definitions/getNoteById"
            },
            "responses": {
                "201": {
                    "description": "get note succesfully !!"
                },
                "400": {
                    "description": "Please enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
},
"/updateNote/{id}": {
    "put": {
        "tags": [
            "Update Notes By Id"
        ],
        "description": "Update a Specific note id !!",
        "parameters": [
            {
                "in": "header",
                "name": "Authorization",
                "description": "Token for validation",
                "schema": {
                    "type": "string",
                    "required": true
                }
            },
            {
                "in": "path",
                "name": "id",
                "description": "Id of note you want to update",
                "schema": {
                    "type": "string"
                }
            },
            {
                "in": "body",
                "name": "note",
                "description": "Note body",
                "schema": {
                    "$ref": "#/definitions/updatenotes"
                }
            }
        ],
        "produces": [
            "application/json"
        ],
        "responses": {
            "201": {
                "description": "update note succesfully !!"
            },
            "401": {
                "description": "Please enter Valid Token"
            },
            "500": {
                "description": "Internal server error"
            }
        }
    }

    },
    "/deleteNote/{id}": {
        "delete": {
            "tags": [
                "Delete Notes By Id"
            ],
            "description": "Delete a note by ID ",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string",
                        "required": true
                    }
                },
                {
                    "in": "path",
                    "name": "id",
                    "description": "Id of note you want to Delete",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "201": {
                    "description": "Delete note succesfully !!"
                },
                "401": {
                    "description": "Please enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    }
},

    "definitions": {
        "registerUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }

            }
        },

        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotpassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "createNote": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "getNote": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "getNoteById": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "updatenotes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        }
    }
} 


    
